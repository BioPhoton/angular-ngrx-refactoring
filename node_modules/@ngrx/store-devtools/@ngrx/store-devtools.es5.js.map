{"version":3,"file":"store-devtools.es5.js","sources":["../../../modules/store-devtools/index.ts","../../../modules/store-devtools/src/instrument.ts","../../../modules/store-devtools/src/devtools.ts","../../../modules/store-devtools/src/config.ts","../../../modules/store-devtools/src/reducer.ts","../../../modules/store-devtools/src/extension.ts","../../../modules/store-devtools/src/utils.ts","../../../modules/store-devtools/src/actions.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {StoreDevtoolsModule,LiftedState,StoreDevtools,StoreDevtoolsConfig,StoreDevtoolsOptions} from './public_api';\n\nexport {INITIAL_OPTIONS as ɵi,STORE_DEVTOOLS_CONFIG as ɵh} from './src/config';\nexport {DevtoolsDispatcher as ɵg} from './src/devtools';\nexport {DevtoolsExtension as ɵk,REDUX_DEVTOOLS_EXTENSION as ɵj} from './src/extension';\nexport {IS_EXTENSION_OR_MONITOR_PRESENT as ɵa,createConfig as ɵf,createIsExtensionOrMonitorPresent as ɵb,createReduxDevtoolsExtension as ɵc,createStateObservable as ɵd,noMonitor as ɵe} from './src/instrument';","import {\n  NgModule,\n  InjectionToken,\n  Injector,\n  ModuleWithProviders,\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  StoreModule,\n  State,\n  StateObservable,\n  ActionsSubject,\n  ScannedActionsSubject,\n  ReducerObservable,\n  ReducerManagerDispatcher,\n  ActionReducerMap,\n  ActionReducerFactory,\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n} from '@ngrx/store';\nimport { StoreDevtools, DevtoolsDispatcher } from './devtools';\nimport {\n  StoreDevtoolsConfig,\n  StoreDevtoolsOptions,\n  STORE_DEVTOOLS_CONFIG,\n  INITIAL_OPTIONS,\n} from './config';\nimport {\n  DevtoolsExtension,\n  REDUX_DEVTOOLS_EXTENSION,\n  ReduxDevtoolsExtension,\n} from './extension';\n\nexport const /** @type {?} */ IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken<boolean>(\n  'Is Devtools Extension or Monitor Present'\n);\n/**\n * @param {?} extension\n * @param {?} config\n * @return {?}\n */\nexport function createIsExtensionOrMonitorPresent(\n  extension: ReduxDevtoolsExtension | null,\n  config: StoreDevtoolsConfig\n) {\n  return Boolean(extension) || config.monitor !== noMonitor;\n}\n/**\n * @return {?}\n */\nexport function createReduxDevtoolsExtension() {\n  const /** @type {?} */ extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n\n  if (\n    typeof window === 'object' &&\n    typeof ( /** @type {?} */((window as any)))[extensionKey] !== 'undefined'\n  ) {\n    return ( /** @type {?} */((window as any)))[extensionKey];\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} devtools\n * @return {?}\n */\nexport function createStateObservable(devtools: StoreDevtools) {\n  return devtools.state;\n}\n/**\n * @return {?}\n */\nexport function noMonitor(): null {\n  return null;\n}\n/**\n * @param {?} _options\n * @return {?}\n */\nexport function createConfig(\n  _options: StoreDevtoolsOptions\n): StoreDevtoolsConfig {\n  const /** @type {?} */ DEFAULT_OPTIONS: StoreDevtoolsConfig = {\n    maxAge: false,\n    monitor: noMonitor,\n  };\n\n  let /** @type {?} */ options = typeof _options === 'function' ? _options() : _options;\n  const /** @type {?} */ config = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  if (config.maxAge && config.maxAge < 2) {\n    throw new Error(\n      `Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`\n    );\n  }\n\n  return config;\n}\nexport class StoreDevtoolsModule {\n/**\n * @param {?=} options\n * @return {?}\n */\nstatic instrument(options: StoreDevtoolsOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: StoreDevtoolsModule,\n      providers: [\n        DevtoolsExtension,\n        DevtoolsDispatcher,\n        StoreDevtools,\n        {\n          provide: INITIAL_OPTIONS,\n          useValue: options,\n        },\n        {\n          provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n          deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n          useFactory: createIsExtensionOrMonitorPresent,\n        },\n        {\n          provide: REDUX_DEVTOOLS_EXTENSION,\n          useFactory: createReduxDevtoolsExtension,\n        },\n        {\n          provide: STORE_DEVTOOLS_CONFIG,\n          deps: [INITIAL_OPTIONS],\n          useFactory: createConfig,\n        },\n        {\n          provide: StateObservable,\n          deps: [StoreDevtools],\n          useFactory: createStateObservable,\n        },\n        {\n          provide: ReducerManagerDispatcher,\n          useExisting: DevtoolsDispatcher,\n        },\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StoreDevtoolsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreDevtoolsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreDevtoolsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport {\n  State,\n  Action,\n  INITIAL_STATE,\n  ReducerObservable,\n  ActionsSubject,\n  ScannedActionsSubject,\n} from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { map } from 'rxjs/operator/map';\nimport { merge } from 'rxjs/operator/merge';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { scan } from 'rxjs/operator/scan';\nimport { skip } from 'rxjs/operator/skip';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { queue } from 'rxjs/scheduler/queue';\n\nimport { DevtoolsExtension } from './extension';\nimport { liftAction, unliftAction, unliftState, applyOperators } from './utils';\nimport { liftReducerWith, liftInitialState, LiftedState } from './reducer';\nimport * as Actions from './actions';\nimport { StoreDevtoolsConfig, STORE_DEVTOOLS_CONFIG } from './config';\nexport class DevtoolsDispatcher extends ActionsSubject {static decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DevtoolsDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nDevtoolsDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDevtoolsDispatcher.ctorParameters;\n}\n\nexport class StoreDevtools implements Observer<any> {\nprivate stateSubscription: Subscription;\npublic dispatcher: ActionsSubject;\npublic liftedState: Observable<LiftedState>;\npublic state: Observable<any>;\n/**\n * @param {?} dispatcher\n * @param {?} actions$\n * @param {?} reducers$\n * @param {?} extension\n * @param {?} scannedActions\n * @param {?} initialState\n * @param {?} config\n */\nconstructor(\n    dispatcher: DevtoolsDispatcher,\n    actions$: ActionsSubject,\n    reducers$: ReducerObservable,\n    extension: DevtoolsExtension,\n    scannedActions: ScannedActionsSubject,\n     initialState: any,\n     config: StoreDevtoolsConfig\n  ) {\n    const liftedInitialState = liftInitialState(initialState, config.monitor);\n    const liftReducer = liftReducerWith(\n      initialState,\n      liftedInitialState,\n      config.monitor,\n      config.maxAge ? { maxAge: config.maxAge } : {}\n    );\n\n    const liftedAction$ = applyOperators(actions$.asObservable(), [\n      [skip, 1],\n      [merge, extension.actions$],\n      [map, liftAction],\n      [merge, dispatcher, extension.liftedActions$],\n      [observeOn, queue],\n    ]);\n\n    const liftedReducer$ = map.call(reducers$, liftReducer);\n\n    const liftedStateSubject = new ReplaySubject<LiftedState>(1);\n    const liftedStateSubscription = applyOperators(liftedAction$, [\n      [withLatestFrom, liftedReducer$],\n      [\n        scan,\n        ({ state: liftedState }: any, [action, reducer]: any) => {\n          const state = reducer(liftedState, action);\n\n          extension.notify(action, state);\n\n          return { state, action };\n        },\n        { state: liftedInitialState, action: null },\n      ],\n    ]).subscribe(({ state, action }) => {\n      liftedStateSubject.next(state);\n\n      if (action.type === Actions.PERFORM_ACTION) {\n        const unlifedAction = (action as Actions.PerformAction).action;\n\n        scannedActions.next(unlifedAction);\n      }\n    });\n\n    const liftedState$ = liftedStateSubject.asObservable() as Observable<\n      LiftedState\n    >;\n    const state$ = map.call(liftedState$, unliftState);\n\n    this.stateSubscription = liftedStateSubscription;\n    this.dispatcher = dispatcher;\n    this.liftedState = liftedState$;\n    this.state = state$;\n  }\n/**\n * @param {?} action\n * @return {?}\n */\ndispatch(action: Action) {\n    this.dispatcher.next(action);\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: any) {\n    this.dispatcher.next(action);\n  }\n/**\n * @param {?} error\n * @return {?}\n */\nerror(error: any) {}\n/**\n * @return {?}\n */\ncomplete() {}\n/**\n * @param {?} action\n * @return {?}\n */\nperformAction(action: any) {\n    this.dispatch(new Actions.PerformAction(action));\n  }\n/**\n * @return {?}\n */\nreset() {\n    this.dispatch(new Actions.Reset());\n  }\n/**\n * @return {?}\n */\nrollback() {\n    this.dispatch(new Actions.Rollback());\n  }\n/**\n * @return {?}\n */\ncommit() {\n    this.dispatch(new Actions.Commit());\n  }\n/**\n * @return {?}\n */\nsweep() {\n    this.dispatch(new Actions.Sweep());\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ntoggleAction(id: number) {\n    this.dispatch(new Actions.ToggleAction(id));\n  }\n/**\n * @param {?} index\n * @return {?}\n */\njumpToState(index: number) {\n    this.dispatch(new Actions.JumpToState(index));\n  }\n/**\n * @param {?} nextLiftedState\n * @return {?}\n */\nimportState(nextLiftedState: any) {\n    this.dispatch(new Actions.ImportState(nextLiftedState));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DevtoolsDispatcher, },\n{type: ActionsSubject, },\n{type: ReducerObservable, },\n{type: DevtoolsExtension, },\n{type: ScannedActionsSubject, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n{type: StoreDevtoolsConfig, decorators: [{ type: Inject, args: [STORE_DEVTOOLS_CONFIG, ] }, ]},\n];\n}\n\nfunction StoreDevtools_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreDevtools.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreDevtools.ctorParameters;\n/** @type {?} */\nStoreDevtools.prototype.stateSubscription;\n/** @type {?} */\nStoreDevtools.prototype.dispatcher;\n/** @type {?} */\nStoreDevtools.prototype.liftedState;\n/** @type {?} */\nStoreDevtools.prototype.state;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ActionReducer } from '@ngrx/store';\nimport { InjectionToken, Type } from '@angular/core';\nexport class StoreDevtoolsConfig {\n  maxAge: number | false;\n  monitor: ActionReducer<any, any>;\n}\n\nfunction StoreDevtoolsConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreDevtoolsConfig.prototype.maxAge;\n/** @type {?} */\nStoreDevtoolsConfig.prototype.monitor;\n}\n\n\nexport const /** @type {?} */ STORE_DEVTOOLS_CONFIG = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/devtools Options'\n);\nexport const /** @type {?} */ INITIAL_OPTIONS = new InjectionToken<StoreDevtoolsConfig>(\n  '@ngrx/devtools Initial Config'\n);\n\nexport type StoreDevtoolsOptions =\n  | Partial<StoreDevtoolsConfig>\n  | (() => Partial<StoreDevtoolsConfig>);\n","import {\n  Action,\n  ActionReducer,\n  ActionsSubject,\n  ReducerManager,\n  UPDATE,\n  INIT,\n} from '@ngrx/store';\n\nimport { difference, liftAction } from './utils';\nimport * as Actions from './actions';\n\nexport type InitAction = {\n  readonly type: typeof INIT;\n};\n\nexport type UpdateReducerAction = {\n  readonly type: typeof UPDATE;\n};\n\nexport type CoreActions = InitAction | UpdateReducerAction;\nexport type Actions = Actions.All | CoreActions;\n\nexport const /** @type {?} */ INIT_ACTION = { type: INIT };\n\nexport interface LiftedState {\n  monitorState: any;\n  nextActionId: number;\n  actionsById: { [id: number]: { action: Action } };\n  stagedActionIds: number[];\n  skippedActionIds: number[];\n  committedState: any;\n  currentStateIndex: number;\n  computedStates: { state: any; error: any }[];\n}\n/**\n * Computes the next entry in the log by applying an action.\n * @param {?} reducer\n * @param {?} action\n * @param {?} state\n * @param {?} error\n * @return {?}\n */\nfunction computeNextEntry(\n  reducer: ActionReducer<any, any>,\n  action: Action,\n  state: LiftedState,\n  error: any\n) {\n  if (error) {\n    return {\n      state,\n      error: 'Interrupted by an error up the chain',\n    };\n  }\n\n  let /** @type {?} */ nextState = state;\n  let /** @type {?} */ nextError;\n  try {\n    nextState = reducer(state, action);\n  } catch ( /** @type {?} */err) {\n    nextError = err.toString();\n    console.error(err.stack || err);\n  }\n\n  return {\n    state: nextState,\n    error: nextError,\n  };\n}\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n * @param {?} computedStates\n * @param {?} minInvalidatedStateIndex\n * @param {?} reducer\n * @param {?} committedState\n * @param {?} actionsById\n * @param {?} stagedActionIds\n * @param {?} skippedActionIds\n * @return {?}\n */\nfunction recomputeStates(\n  computedStates: { state: any; error: any }[],\n  minInvalidatedStateIndex: number,\n  reducer: ActionReducer<any, any>,\n  committedState: any,\n  actionsById: { [id: number]: { action: Action } },\n  stagedActionIds: number[],\n  skippedActionIds: number[]\n) {\n  // Optimization: exit early and return the same reference\n  // if we know nothing could have changed.\n  if (\n    minInvalidatedStateIndex >= computedStates.length &&\n    computedStates.length === stagedActionIds.length\n  ) {\n    return computedStates;\n  }\n\n  const /** @type {?} */ nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n  for (let /** @type {?} */ i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {\n    const /** @type {?} */ actionId = stagedActionIds[i];\n    const /** @type {?} */ action = actionsById[actionId].action;\n\n    const /** @type {?} */ previousEntry = nextComputedStates[i - 1];\n    const /** @type {?} */ previousState = previousEntry ? previousEntry.state : committedState;\n    const /** @type {?} */ previousError = previousEntry ? previousEntry.error : undefined;\n\n    const /** @type {?} */ shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n    const /** @type {?} */ entry = shouldSkip\n      ? previousEntry\n      : computeNextEntry(reducer, action, previousState, previousError);\n\n    nextComputedStates.push(entry);\n  }\n\n  return nextComputedStates;\n}\n/**\n * @param {?=} initialCommittedState\n * @param {?=} monitorReducer\n * @return {?}\n */\nexport function liftInitialState(\n  initialCommittedState?: any,\n  monitorReducer?: any\n): LiftedState {\n  return {\n    monitorState: monitorReducer(undefined, {}),\n    nextActionId: 1,\n    actionsById: { 0: liftAction(INIT_ACTION) },\n    stagedActionIds: [0],\n    skippedActionIds: [],\n    committedState: initialCommittedState,\n    currentStateIndex: 0,\n    computedStates: [],\n  };\n}\n/**\n * Creates a history state reducer from an app's reducer.\n * @param {?} initialCommittedState\n * @param {?} initialLiftedState\n * @param {?=} monitorReducer\n * @param {?=} options\n * @return {?}\n */\nexport function liftReducerWith(\n  initialCommittedState: any,\n  initialLiftedState: LiftedState,\n  monitorReducer?: any,\n  options: { maxAge?: number } = {}\n) {\n  /**\n  * Manages how the history actions modify the history state.\n  */\n  return (\n    reducer: ActionReducer<any, any>\n  ): ActionReducer<LiftedState, Actions> => (liftedState, liftedAction) => {\n    let {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n    } =\n      liftedState || initialLiftedState;\n\n    if (!liftedState) {\n      // Prevent mutating initialLiftedState\n      actionsById = Object.create(actionsById);\n    }\n/**\n * @param {?} n\n * @return {?}\n */\nfunction commitExcessActions(n: number) {\n      // Auto-commits n-number of excess actions.\n      let /** @type {?} */ excess = n;\n      let /** @type {?} */ idsToDelete = stagedActionIds.slice(1, excess + 1);\n\n      for (let /** @type {?} */ i = 0; i < idsToDelete.length; i++) {\n        if (computedStates[i + 1].error) {\n          // Stop if error is found. Commit actions up to error.\n          excess = i;\n          idsToDelete = stagedActionIds.slice(1, excess + 1);\n          break;\n        } else {\n          delete actionsById[idsToDelete[i]];\n        }\n      }\n\n      skippedActionIds = skippedActionIds.filter(\n        id => idsToDelete.indexOf(id) === -1\n      );\n      stagedActionIds = [0, ...stagedActionIds.slice(excess + 1)];\n      committedState = computedStates[excess].state;\n      computedStates = computedStates.slice(excess);\n      currentStateIndex =\n        currentStateIndex > excess ? currentStateIndex - excess : 0;\n    }\n\n    // By default, agressively recompute every state whatever happens.\n    // This has O(n) performance, so we'll override this to a sensible\n    // value whenever we feel like we don't have to recompute the states.\n    let /** @type {?} */ minInvalidatedStateIndex = 0;\n\n    switch (liftedAction.type) {\n      case Actions.RESET: {\n        // Get back to the state the store was created with.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        committedState = initialCommittedState;\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case Actions.COMMIT: {\n        // Consider the last committed state the new starting point.\n        // Squash any staged actions into a single committed state.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        committedState = computedStates[currentStateIndex].state;\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case Actions.ROLLBACK: {\n        // Forget about any staged actions.\n        // Start again from the last committed state.\n        actionsById = { 0: liftAction(INIT_ACTION) };\n        nextActionId = 1;\n        stagedActionIds = [0];\n        skippedActionIds = [];\n        currentStateIndex = 0;\n        computedStates = [];\n        break;\n      }\n      case Actions.TOGGLE_ACTION: {\n        // Toggle whether an action with given ID is skipped.\n        // Being skipped means it is a no-op during the computation.\n        const { id: actionId } = liftedAction;\n        const /** @type {?} */ index = skippedActionIds.indexOf(actionId);\n        if (index === -1) {\n          skippedActionIds = [actionId, ...skippedActionIds];\n        } else {\n          skippedActionIds = skippedActionIds.filter(id => id !== actionId);\n        }\n        // Optimization: we know history before this action hasn't changed\n        minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n        break;\n      }\n      case Actions.SET_ACTIONS_ACTIVE: {\n        // Toggle whether an action with given ID is skipped.\n        // Being skipped means it is a no-op during the computation.\n        const { start, end, active } = liftedAction;\n        const /** @type {?} */ actionIds = [];\n        for (let /** @type {?} */ i = start; i < end; i++) actionIds.push(i);\n        if (active) {\n          skippedActionIds = difference(skippedActionIds, actionIds);\n        } else {\n          skippedActionIds = [...skippedActionIds, ...actionIds];\n        }\n\n        // Optimization: we know history before this action hasn't changed\n        minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n        break;\n      }\n      case Actions.JUMP_TO_STATE: {\n        // Without recomputing anything, move the pointer that tell us\n        // which state is considered the current one. Useful for sliders.\n        currentStateIndex = liftedAction.index;\n        // Optimization: we know the history has not changed.\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n      case Actions.SWEEP: {\n        // Forget any actions that are currently being skipped.\n        stagedActionIds = difference(stagedActionIds, skippedActionIds);\n        skippedActionIds = [];\n        currentStateIndex = Math.min(\n          currentStateIndex,\n          stagedActionIds.length - 1\n        );\n        break;\n      }\n      case Actions.PERFORM_ACTION: {\n        // Auto-commit as new actions come in.\n        if (options.maxAge && stagedActionIds.length === options.maxAge) {\n          commitExcessActions(1);\n        }\n\n        if (currentStateIndex === stagedActionIds.length - 1) {\n          currentStateIndex++;\n        }\n        const /** @type {?} */ actionId = nextActionId++;\n        // Mutation! This is the hottest path, and we optimize on purpose.\n        // It is safe because we set a new key in a cache dictionary.\n        actionsById[actionId] = liftedAction;\n        stagedActionIds = [...stagedActionIds, actionId];\n        // Optimization: we know that only the new action needs computing.\n        minInvalidatedStateIndex = stagedActionIds.length - 1;\n        break;\n      }\n      case Actions.IMPORT_STATE: {\n        // Completely replace everything.\n        ({\n          monitorState,\n          actionsById,\n          nextActionId,\n          stagedActionIds,\n          skippedActionIds,\n          committedState,\n          currentStateIndex,\n          computedStates,\n        } = liftedAction.nextLiftedState);\n        break;\n      }\n      case UPDATE:\n      case INIT: {\n        // Always recompute states on hot reload and init.\n        minInvalidatedStateIndex = 0;\n\n        if (options.maxAge && stagedActionIds.length > options.maxAge) {\n          // States must be recomputed before committing excess.\n          computedStates = recomputeStates(\n            computedStates,\n            minInvalidatedStateIndex,\n            reducer,\n            committedState,\n            actionsById,\n            stagedActionIds,\n            skippedActionIds\n          );\n\n          commitExcessActions(stagedActionIds.length - options.maxAge);\n\n          // Avoid double computation.\n          minInvalidatedStateIndex = Infinity;\n        }\n\n        break;\n      }\n      default: {\n        // If the action is not recognized, it's a monitor action.\n        // Optimization: a monitor action can't change history.\n        minInvalidatedStateIndex = Infinity;\n        break;\n      }\n    }\n\n    computedStates = recomputeStates(\n      computedStates,\n      minInvalidatedStateIndex,\n      reducer,\n      committedState,\n      actionsById,\n      stagedActionIds,\n      skippedActionIds\n    );\n    monitorState = monitorReducer(monitorState, liftedAction);\n\n    return {\n      monitorState,\n      actionsById,\n      nextActionId,\n      stagedActionIds,\n      skippedActionIds,\n      committedState,\n      currentStateIndex,\n      computedStates,\n    };\n  };\n}\n","import { InjectionToken, Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { empty } from 'rxjs/observable/empty';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\nimport { share } from 'rxjs/operator/share';\nimport { switchMap } from 'rxjs/operator/switchMap';\nimport { takeUntil } from 'rxjs/operator/takeUntil';\nimport { Action } from '@ngrx/store';\nimport { LiftedState } from './reducer';\nimport { applyOperators } from './utils';\n\nexport const /** @type {?} */ ExtensionActionTypes = {\n  START: 'START',\n  DISPATCH: 'DISPATCH',\n  STOP: 'STOP',\n  ACTION: 'ACTION',\n};\n\nexport const /** @type {?} */ REDUX_DEVTOOLS_EXTENSION = new InjectionToken<\n  ReduxDevtoolsExtension\n>('Redux Devtools Extension');\n\nexport interface ReduxDevtoolsExtensionConnection {\n  subscribe(listener: (change: any) => void): void;\n  unsubscribe(): void;\n  send(action: any, state: any): void;\n}\n\nexport interface ReduxDevtoolsExtension {\n  connect(options: {\n    shouldStringify?: boolean;\n    instanceId: string;\n  }): ReduxDevtoolsExtensionConnection;\n  send(\n    action: any,\n    state: any,\n    options?: boolean | { serialize: boolean | object },\n    instanceId?: string\n  ): void;\n}\nexport class DevtoolsExtension {\nprivate instanceId = `ngrx-store-${Date.now()}`;\nprivate devtoolsExtension: ReduxDevtoolsExtension;\n\n  liftedActions$: Observable<any>;\n  actions$: Observable<any>;\n/**\n * @param {?} devtoolsExtension\n */\nconstructor(\n     devtoolsExtension: ReduxDevtoolsExtension\n  ) {\n    this.devtoolsExtension = devtoolsExtension;\n    this.createActionStreams();\n  }\n/**\n * @param {?} action\n * @param {?} state\n * @return {?}\n */\nnotify(action: Action, state: LiftedState) {\n    if (!this.devtoolsExtension) {\n      return;\n    }\n\n    this.devtoolsExtension.send(\n      null,\n      state,\n      { serialize: false },\n      this.instanceId\n    );\n  }\n/**\n * @return {?}\n */\nprivate createChangesObservable(): Observable<any> {\n    if (!this.devtoolsExtension) {\n      return empty();\n    }\n\n    return new Observable(subscriber => {\n      const /** @type {?} */ connection = this.devtoolsExtension.connect({\n        instanceId: this.instanceId,\n      });\n\n      connection.subscribe((change: any) => subscriber.next(change));\n\n      return connection.unsubscribe;\n    });\n  }\n/**\n * @return {?}\n */\nprivate createActionStreams() {\n    // Listens to all changes based on our instanceId\n    const /** @type {?} */ changes$ = share.call(this.createChangesObservable());\n\n    // Listen for the start action\n    const /** @type {?} */ start$ = filter.call(\n      changes$,\n      (change: any) => change.type === ExtensionActionTypes.START\n    );\n\n    // Listen for the stop action\n    const /** @type {?} */ stop$ = filter.call(\n      changes$,\n      (change: any) => change.type === ExtensionActionTypes.STOP\n    );\n\n    // Listen for lifted actions\n    const /** @type {?} */ liftedActions$ = applyOperators(changes$, [\n      [filter, (change: any) => change.type === ExtensionActionTypes.DISPATCH],\n      [map, (change: any) => this.unwrapAction(change.payload)],\n    ]);\n\n    // Listen for unlifted actions\n    const /** @type {?} */ actions$ = applyOperators(changes$, [\n      [filter, (change: any) => change.type === ExtensionActionTypes.ACTION],\n      [map, (change: any) => this.unwrapAction(change.payload)],\n    ]);\n\n    const /** @type {?} */ actionsUntilStop$ = takeUntil.call(actions$, stop$);\n    const /** @type {?} */ liftedUntilStop$ = takeUntil.call(liftedActions$, stop$);\n\n    // Only take the action sources between the start/stop events\n    this.actions$ = switchMap.call(start$, () => actionsUntilStop$);\n    this.liftedActions$ = switchMap.call(start$, () => liftedUntilStop$);\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nprivate unwrapAction(action: Action) {\n    return typeof action === 'string' ? eval(`(${action})`) : action;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [REDUX_DEVTOOLS_EXTENSION, ] }, ]},\n];\n}\n\nfunction DevtoolsExtension_tsickle_Closure_declarations() {\n/** @type {?} */\nDevtoolsExtension.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDevtoolsExtension.ctorParameters;\n/** @type {?} */\nDevtoolsExtension.prototype.instanceId;\n/** @type {?} */\nDevtoolsExtension.prototype.devtoolsExtension;\n/** @type {?} */\nDevtoolsExtension.prototype.liftedActions$;\n/** @type {?} */\nDevtoolsExtension.prototype.actions$;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { LiftedState } from './reducer';\nimport * as Actions from './actions';\n/**\n * @param {?} first\n * @param {?} second\n * @return {?}\n */\nexport function difference(first: any[], second: any[]) {\n  return first.filter(item => second.indexOf(item) < 0);\n}\n/**\n * Provides an app's view into the state of the lifted store.\n * @param {?} liftedState\n * @return {?}\n */\nexport function unliftState(liftedState: LiftedState) {\n  const { computedStates, currentStateIndex } = liftedState;\n  const { state } = computedStates[currentStateIndex];\n\n  return state;\n}\n/**\n * @param {?} liftedState\n * @return {?}\n */\nexport function unliftAction(liftedState: LiftedState) {\n  return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n/**\n * Lifts an app's action into an action on the lifted store.\n * @param {?} action\n * @return {?}\n */\nexport function liftAction(action: Action) {\n  return new Actions.PerformAction(action);\n}\n/**\n * @param {?} input$\n * @param {?} operators\n * @return {?}\n */\nexport function applyOperators(\n  input$: Observable<any>,\n  operators: any[][]\n): Observable<any> {\n  return operators.reduce((source$, [operator, ...args]) => {\n    return operator.apply(source$, args);\n  }, input$);\n}\n","import { Action } from '@ngrx/store';\n\nexport const /** @type {?} */ PERFORM_ACTION = 'PERFORM_ACTION';\nexport const /** @type {?} */ RESET = 'RESET';\nexport const /** @type {?} */ ROLLBACK = 'ROLLBACK';\nexport const /** @type {?} */ COMMIT = 'COMMIT';\nexport const /** @type {?} */ SWEEP = 'SWEEP';\nexport const /** @type {?} */ TOGGLE_ACTION = 'TOGGLE_ACTION';\nexport const /** @type {?} */ SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nexport const /** @type {?} */ JUMP_TO_STATE = 'JUMP_TO_STATE';\nexport const /** @type {?} */ IMPORT_STATE = 'IMPORT_STATE';\nexport class PerformAction implements Action {\n  readonly type = PERFORM_ACTION;\n/**\n * @param {?} action\n * @param {?=} timestamp\n */\nconstructor(public action: Action,\npublic timestamp?: number) {\n    if (typeof action.type === 'undefined') {\n      throw new Error(\n        'Actions may not have an undefined \"type\" property. ' +\n          'Have you misspelled a constant?'\n      );\n    }\n  }\n}\n\nfunction PerformAction_tsickle_Closure_declarations() {\n/** @type {?} */\nPerformAction.prototype.type;\n/** @type {?} */\nPerformAction.prototype.action;\n/** @type {?} */\nPerformAction.prototype.timestamp;\n}\n\nexport class Reset implements Action {\n  readonly type = RESET;\n/**\n * @param {?=} timestamp\n */\nconstructor(public timestamp?: number) {}\n}\n\nfunction Reset_tsickle_Closure_declarations() {\n/** @type {?} */\nReset.prototype.type;\n/** @type {?} */\nReset.prototype.timestamp;\n}\n\nexport class Rollback implements Action {\n  readonly type = ROLLBACK;\n/**\n * @param {?=} timestamp\n */\nconstructor(public timestamp?: number) {}\n}\n\nfunction Rollback_tsickle_Closure_declarations() {\n/** @type {?} */\nRollback.prototype.type;\n/** @type {?} */\nRollback.prototype.timestamp;\n}\n\nexport class Commit implements Action {\n  readonly type = COMMIT;\n/**\n * @param {?=} timestamp\n */\nconstructor(public timestamp?: number) {}\n}\n\nfunction Commit_tsickle_Closure_declarations() {\n/** @type {?} */\nCommit.prototype.type;\n/** @type {?} */\nCommit.prototype.timestamp;\n}\n\nexport class Sweep implements Action {\n  readonly type = SWEEP;\n}\n\nfunction Sweep_tsickle_Closure_declarations() {\n/** @type {?} */\nSweep.prototype.type;\n}\n\nexport class ToggleAction implements Action {\n  readonly type = TOGGLE_ACTION;\n/**\n * @param {?} id\n */\nconstructor(public id: number) {}\n}\n\nfunction ToggleAction_tsickle_Closure_declarations() {\n/** @type {?} */\nToggleAction.prototype.type;\n/** @type {?} */\nToggleAction.prototype.id;\n}\n\nexport class SetActionsActive implements Action {\n  readonly type = SET_ACTIONS_ACTIVE;\n/**\n * @param {?} start\n * @param {?} end\n * @param {?=} active\n */\nconstructor(\npublic start: number,\npublic end: number,\npublic active: boolean = true\n  ) {}\n}\n\nfunction SetActionsActive_tsickle_Closure_declarations() {\n/** @type {?} */\nSetActionsActive.prototype.type;\n/** @type {?} */\nSetActionsActive.prototype.start;\n/** @type {?} */\nSetActionsActive.prototype.end;\n/** @type {?} */\nSetActionsActive.prototype.active;\n}\n\nexport class JumpToState implements Action {\n  readonly type = JUMP_TO_STATE;\n/**\n * @param {?} index\n */\nconstructor(public index: number) {}\n}\n\nfunction JumpToState_tsickle_Closure_declarations() {\n/** @type {?} */\nJumpToState.prototype.type;\n/** @type {?} */\nJumpToState.prototype.index;\n}\n\nexport class ImportState implements Action {\n  readonly type = IMPORT_STATE;\n/**\n * @param {?} nextLiftedState\n */\nconstructor(public nextLiftedState: any) {}\n}\n\nfunction ImportState_tsickle_Closure_declarations() {\n/** @type {?} */\nImportState.prototype.type;\n/** @type {?} */\nImportState.prototype.nextLiftedState;\n}\n\n\nexport type All =\n  | PerformAction\n  | Reset\n  | Rollback\n  | Commit\n  | Sweep\n  | ToggleAction\n  | SetActionsActive\n  | JumpToState\n  | ImportState;\n"],"names":["Actions.ImportState","Actions.JumpToState","Actions.ToggleAction","Actions.Sweep","Actions.Commit","Actions.Rollback","Actions.Reset","Actions.PerformAction","Actions.PERFORM_ACTION","Actions.IMPORT_STATE","Actions.SWEEP","Actions.JUMP_TO_STATE","Actions.SET_ACTIONS_ACTIVE","Actions.TOGGLE_ACTION","Actions.ROLLBACK","Actions.COMMIT","Actions.RESET"],"mappings":"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"}