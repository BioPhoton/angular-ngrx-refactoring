{"version":3,"file":"store.es5.js","sources":["../../../modules/store/index.ts","../../../modules/store/src/selector.ts","../../../modules/store/src/store_module.ts","../../../modules/store/src/store.ts","../../../modules/store/src/state.ts","../../../modules/store/src/scanned_actions_subject.ts","../../../modules/store/src/reducer_manager.ts","../../../modules/store/src/actions_subject.ts","../../../modules/store/src/tokens.ts","../../../modules/store/src/utils.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Action,ActionReducer,ActionReducerMap,ActionReducerFactory,MetaReducer,Selector,StoreModule,Store,combineReducers,compose,createReducerFactory,ActionsSubject,INIT,ReducerManager,ReducerObservable,ReducerManagerDispatcher,UPDATE,ScannedActionsSubject,createSelector,createFeatureSelector,MemoizedSelector,State,StateObservable,reduceState,INITIAL_STATE,_REDUCER_FACTORY,REDUCER_FACTORY,_INITIAL_REDUCERS,INITIAL_REDUCERS,STORE_FEATURES,_INITIAL_STATE,META_REDUCERS,_STORE_REDUCERS,_FEATURE_REDUCERS,FEATURE_REDUCERS,_FEATURE_REDUCERS_TOKEN,StoreRootModule,StoreFeatureModule,_initialStateFactory,_createStoreReducers,_createFeatureReducers} from './public_api';\n\nexport {ACTIONS_SUBJECT_PROVIDERS as ɵc} from './src/actions_subject';\nexport {StoreFeature as ɵa} from './src/models';\nexport {REDUCER_MANAGER_PROVIDERS as ɵd} from './src/reducer_manager';\nexport {SCANNED_ACTIONS_SUBJECT_PROVIDERS as ɵe} from './src/scanned_actions_subject';\nexport {STATE_PROVIDERS as ɵf} from './src/state';\nexport {STORE_PROVIDERS as ɵb} from './src/store';","import { Selector } from './models';\n\nexport interface MemoizedSelector<State, Result>\n  extends Selector<State, Result> {\n  release(): void;\n}\n\nexport type AnyFn = (...args: any[]) => any;\n/**\n * @param {?} t\n * @return {?}\n */\nexport function memoize(t: AnyFn): { memoized: AnyFn; reset: () => void } {\n  let /** @type {?} */ lastArguments: null | IArguments = null;\n  let /** @type {?} */ lastResult: any = null;\n/**\n * @return {?}\n */\nfunction reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n/**\n * @return {?}\n */\nfunction memoized(): any {\n    if (!lastArguments) {\n      lastResult = t.apply(null, arguments);\n      lastArguments = arguments;\n\n      return lastResult;\n    }\n    for (let /** @type {?} */ i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== lastArguments[i]) {\n        lastResult = t.apply(null, arguments);\n        lastArguments = arguments;\n\n        return lastResult;\n      }\n    }\n\n    return lastResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (S1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\n/**\n * @param {...?} args\n * @return {?}\n */\nexport function createSelector(...args: any[]): Selector<any, any> {\n  const /** @type {?} */ selectors = args.slice(0, args.length - 1);\n  const /** @type {?} */ projector = args[args.length - 1];\n  const /** @type {?} */ memoizedSelectors = selectors.filter(\n    (selector: any) =>\n      selector.release && typeof selector.release === 'function'\n  );\n\n  const /** @type {?} */ memoizedProjector = memoize(function(...selectors: any[]) {\n    return projector.apply(null, selectors);\n  });\n\n  const /** @type {?} */ memoizedState = memoize(function(state: any) {\n    const /** @type {?} */ args = selectors.map(fn => fn(state));\n\n    return memoizedProjector.memoized.apply(null, args);\n  });\n/**\n * @return {?}\n */\nfunction release() {\n    memoizedState.reset();\n    memoizedProjector.reset();\n\n    memoizedSelectors.forEach(selector => selector.release());\n  }\n\n  return Object.assign(memoizedState.memoized, { release });\n}\n/**\n * @template T\n * @param {?} featureName\n * @return {?}\n */\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T> {\n  const { memoized, reset } = memoize(function(state: any): any {\n    return state[featureName];\n  });\n\n  return Object.assign(memoized, { release: reset });\n}\n","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n} from './models';\nimport { compose, combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS } from './store';\nexport class StoreRootModule {\n/**\n * @param {?} actions$\n * @param {?} reducer$\n * @param {?} scannedActions$\n */\nconstructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject\n  ) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ActionsSubject, },\n{type: ReducerObservable, },\n{type: ScannedActionsSubject, },\n];\n}\n\nfunction StoreRootModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreRootModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreRootModule.ctorParameters;\n}\n\nexport class StoreFeatureModule implements OnDestroy {\n/**\n * @param {?} features\n * @param {?} featureReducers\n * @param {?} reducerManager\n */\nconstructor(\nprivate features: StoreFeature<any, any>[],\nprivate featureReducers: ActionReducerMap<any>[],\nprivate reducerManager: ReducerManager\n  ) {\n    features\n      .map((feature, index) => {\n        const featureReducerCollection = featureReducers.shift();\n        const reducers = featureReducerCollection[index];\n\n        return {\n          ...feature,\n          reducers,\n          initialState: _initialStateFactory(feature.initialState),\n        };\n      })\n      .forEach(feature => reducerManager.addFeature(feature));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.features.forEach(feature =>\n      this.reducerManager.removeFeature(feature)\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [STORE_FEATURES, ] }, ]},\n{type: Array, decorators: [{ type: Inject, args: [FEATURE_REDUCERS, ] }, ]},\n{type: ReducerManager, },\n];\n}\n\nfunction StoreFeatureModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreFeatureModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreFeatureModule.ctorParameters;\n/** @type {?} */\nStoreFeatureModule.prototype.features;\n/** @type {?} */\nStoreFeatureModule.prototype.featureReducers;\n/** @type {?} */\nStoreFeatureModule.prototype.reducerManager;\n}\n\n\nexport type StoreConfig<T, V extends Action = Action> = {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n};\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n/**\n * @param {?} reducers\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n/**\n * @param {?} featureName\n * @param {?} reducers\n * @param {?=} config\n * @return {?}\n */\nstatic forFeature(\n    featureName: string,\n    reducers: ActionReducerMap<any, any> | ActionReducer<any, any>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: /** @type {?} */(( <StoreFeature<any, any>>{\n            key: featureName,\n            reducerFactory: config.reducerFactory\n              ? config.reducerFactory\n              : combineReducers,\n            metaReducers: config.metaReducers ? config.metaReducers : [],\n            initialState: config.initialState,\n          })),\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StoreModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreModule.ctorParameters;\n}\n\n/**\n * @param {?} injector\n * @param {?} reducers\n * @param {?} tokenReducers\n * @return {?}\n */\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>,\n  tokenReducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n/**\n * @param {?} injector\n * @param {?} reducerCollection\n * @param {?} tokenReducerCollection\n * @return {?}\n */\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[],\n  tokenReducerCollection: ActionReducerMap<any, any>[]\n) {\n  return reducerCollection.map((reducer, index) => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n}\n/**\n * @param {?} initialState\n * @return {?}\n */\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Provider } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { map } from 'rxjs/operator/map';\nimport { pluck } from 'rxjs/operator/pluck';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\nimport { Action, ActionReducer } from './models';\nimport { ActionsSubject } from './actions_subject';\nimport { StateObservable } from './state';\nimport { ReducerManager } from './reducer_manager';\nexport class Store<T> extends Observable<T> implements Observer<Action> {\n/**\n * @param {?} state$\n * @param {?} actionsObserver\n * @param {?} reducerManager\n */\nconstructor(\n    state$: StateObservable,\nprivate actionsObserver: ActionsSubject,\nprivate reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Store<K>;\n  select<a extends keyof T>(key: a): Store<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Store<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Store<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Store<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Store<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Store<T[a][b][c][d][e][f]>;\n/**\n * @param {?} pathOrMapFn\n * @param {...?} paths\n * @return {?}\n */\nselect(\n    pathOrMapFn: ((state: T) => any) | string,\n    ...paths: string[]\n  ): Store<any> {\n    let /** @type {?} */ mapped$: Store<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      mapped$ = pluck.call(this, pathOrMapFn, ...paths);\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = map.call(this, pathOrMapFn);\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return distinctUntilChanged.call(mapped$);\n  }\n/**\n * @template R\n * @param {?} operator\n * @return {?}\n */\nlift<R>(operator: Operator<T, R>): Store<R> {\n    const /** @type {?} */ store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n/**\n * @template V\n * @param {?} action\n * @return {?}\n */\ndispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: Action) {\n    this.actionsObserver.next(action);\n  }\n/**\n * @param {?} err\n * @return {?}\n */\nerror(err: any) {\n    this.actionsObserver.error(err);\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    this.actionsObserver.complete();\n  }\n/**\n * @template State, Actions\n * @param {?} key\n * @param {?} reducer\n * @return {?}\n */\naddReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n/**\n * @template Key\n * @param {?} key\n * @return {?}\n */\nremoveReducer<Key extends keyof T>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StateObservable, },\n{type: ActionsSubject, },\n{type: ReducerManager, },\n];\n}\n\nfunction Store_tsickle_Closure_declarations() {\n/** @type {?} */\nStore.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStore.ctorParameters;\n/** @type {?} */\nStore.prototype.actionsObserver;\n/** @type {?} */\nStore.prototype.reducerManager;\n}\n\n\nexport const /** @type {?} */ STORE_PROVIDERS: Provider[] = [Store];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { scan } from 'rxjs/operator/scan';\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { INITIAL_STATE } from './tokens';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\n/**\n * @abstract\n */\nexport abstract class StateObservable extends Observable<any> {}\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\nprivate stateSubscription: Subscription;\n/**\n * @param {?} actions$\n * @param {?} reducer$\n * @param {?} scannedActions\n * @param {?} initialState\n */\nconstructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n     initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = observeOn.call(actions$, queue);\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = withLatestFrom.call(actionsOnQueue$, reducer$);\n    const stateAndAction$: Observable<{\n      state: any;\n      action: Action;\n    }> = scan.call(withLatestReducer$, reduceState, initialState);\n\n    this.stateSubscription = stateAndAction$.subscribe({\n      next: ({ state, action }) => {\n        this.next(state);\n        scannedActions.next(action);\n      },\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ActionsSubject, },\n{type: ReducerObservable, },\n{type: ScannedActionsSubject, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n];\n}\n\nfunction State_tsickle_Closure_declarations() {\n/** @type {?} */\nState.INIT;\n/** @type {?} */\nState.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nState.ctorParameters;\n/** @type {?} */\nState.prototype.stateSubscription;\n}\n\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\n/**\n * @template T, V\n * @param {?=} stateActionPair\n * @param {?=} __1\n * @return {?}\n */\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const /** @type {?} */ STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Provider, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Action } from './models';\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScannedActionsSubject_tsickle_Closure_declarations() {\n/** @type {?} */\nScannedActionsSubject.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScannedActionsSubject.ctorParameters;\n}\n\n\nexport const /** @type {?} */ SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n} from './models';\nimport { INITIAL_STATE, INITIAL_REDUCERS, REDUCER_FACTORY } from './tokens';\nimport { omit, createReducerFactory } from './utils';\nimport { ActionsSubject } from './actions_subject';\n/**\n * @abstract\n */\nexport abstract class ReducerObservable extends Observable<\n  ActionReducer<any, any>\n> {}\n/**\n * @abstract\n */\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\nexport const /** @type {?} */ UPDATE = /** @type {?} */(( '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers'));\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\n  implements OnDestroy {\n/**\n * @param {?} dispatcher\n * @param {?} initialState\n * @param {?} reducers\n * @param {?} reducerFactory\n */\nconstructor(\nprivate dispatcher: ReducerManagerDispatcher,\nprivate initialState: any,\nprivate reducers: ActionReducerMap<any, any>,\nprivate reducerFactory: ActionReducerFactory<any, any>\n  ) {\n    super(reducerFactory(reducers, initialState));\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\naddFeature({\n    reducers,\n    reducerFactory,\n    metaReducers,\n    initialState,\n    key,\n  }: StoreFeature<any, any>) {\n    const /** @type {?} */ reducer =\n      typeof reducers === 'function'\n        ? (state = initialState, action: any) => reducers(state, action)\n        : createReducerFactory(reducerFactory, metaReducers)(\n            reducers,\n            initialState\n          );\n\n    this.addReducer(key, reducer);\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\nremoveFeature({ key }: StoreFeature<any, any>) {\n    this.removeReducer(key);\n  }\n/**\n * @param {?} key\n * @param {?} reducer\n * @return {?}\n */\naddReducer(key: string, reducer: ActionReducer<any, any>) {\n    this.reducers = { ...this.reducers, [key]: reducer };\n\n    this.updateReducers();\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveReducer(key: string) {\n    this.reducers = omit(this.reducers, key);\n\n    this.updateReducers();\n  }\n/**\n * @return {?}\n */\nprivate updateReducers() {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({ type: UPDATE });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ReducerManagerDispatcher, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_REDUCERS, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [REDUCER_FACTORY, ] }, ]},\n];\n}\n\nfunction ReducerManager_tsickle_Closure_declarations() {\n/** @type {?} */\nReducerManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReducerManager.ctorParameters;\n/** @type {?} */\nReducerManager.prototype.dispatcher;\n/** @type {?} */\nReducerManager.prototype.initialState;\n/** @type {?} */\nReducerManager.prototype.reducers;\n/** @type {?} */\nReducerManager.prototype.reducerFactory;\n}\n\n\nexport const /** @type {?} */ REDUCER_MANAGER_PROVIDERS: Provider[] = [\n  ReducerManager,\n  { provide: ReducerObservable, useExisting: ReducerManager },\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Action } from './models';\n\nexport const /** @type {?} */ INIT = /** @type {?} */(( '@ngrx/store/init' as '@ngrx/store/init'));\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\nconstructor() {\n    super({ type: INIT });\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    /* noop */\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ActionsSubject_tsickle_Closure_declarations() {\n/** @type {?} */\nActionsSubject.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActionsSubject.ctorParameters;\n}\n\n\nexport const /** @type {?} */ ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const /** @type {?} */ _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const /** @type {?} */ INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const /** @type {?} */ REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const /** @type {?} */ _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory Provider'\n);\nexport const /** @type {?} */ INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const /** @type {?} */ _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const /** @type {?} */ META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\nexport const /** @type {?} */ STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const /** @type {?} */ _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const /** @type {?} */ _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\nexport const /** @type {?} */ _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const /** @type {?} */ FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  MetaReducer,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\n/**\n * @param {?} reducers\n * @param {?=} initialState\n * @return {?}\n */\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const /** @type {?} */ reducerKeys = Object.keys(reducers);\n  const /** @type {?} */ finalReducers: any = {};\n\n  for (let /** @type {?} */ i = 0; i < reducerKeys.length; i++) {\n    const /** @type {?} */ key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const /** @type {?} */ finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state = initialState, action) {\n    let /** @type {?} */ hasChanged = false;\n    const /** @type {?} */ nextState: any = {};\n    for (let /** @type {?} */ i = 0; i < finalReducerKeys.length; i++) {\n      const /** @type {?} */ key = finalReducerKeys[i];\n      const /** @type {?} */ reducer: any = finalReducers[key];\n      const /** @type {?} */ previousStateForKey = state[key];\n      const /** @type {?} */ nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n/**\n * @template T\n * @param {?} object\n * @param {?} keyToRemove\n * @return {?}\n */\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\n/**\n * @param {...?} functions\n * @return {?}\n */\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const /** @type {?} */ last = functions[functions.length - 1];\n    const /** @type {?} */ rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n/**\n * @template T, V\n * @param {?} reducerFactory\n * @param {?=} metaReducers\n * @return {?}\n */\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    return compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return reducerFactory;\n}\n"],"names":[],"mappings":"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"}