{"version":3,"file":"router-store.es5.js","sources":["../../../modules/router-store/index.ts","../../../modules/router-store/src/router_store_module.ts","../../../modules/router-store/src/serializer.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ROUTER_ERROR,ROUTER_CANCEL,ROUTER_NAVIGATION,RouterNavigationAction,RouterCancelAction,RouterErrorAction,RouterAction,routerReducer,RouterErrorPayload,RouterReducerState,RouterCancelPayload,RouterNavigationPayload,StoreRouterConnectingModule,RouterStateSerializer,DefaultRouterStateSerializer} from './public_api';\n","import { NgModule } from '@angular/core';\nimport {\n  NavigationCancel,\n  NavigationError,\n  Router,\n  RouterStateSnapshot,\n  RoutesRecognized,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs/observable/of';\nimport {\n  DefaultRouterStateSerializer,\n  RouterStateSerializer,\n} from './serializer';\n/**\n * An action dispatched when the router navigates.\n */\nexport const ROUTER_NAVIGATION = 'ROUTER_NAVIGATION';\n\n/**\n * Payload of ROUTER_NAVIGATION.\n */\nexport type RouterNavigationPayload<T> = {\n  routerState: T;\n  event: RoutesRecognized;\n};\n\n/**\n * An action dispatched when the router navigates.\n */\nexport type RouterNavigationAction<T = RouterStateSnapshot> = {\n  type: typeof ROUTER_NAVIGATION;\n  payload: RouterNavigationPayload<T>;\n};\n/**\n * An action dispatched when the router cancels navigation.\n */\nexport const ROUTER_CANCEL = 'ROUTER_CANCEL';\n\n/**\n * Payload of ROUTER_CANCEL.\n */\nexport type RouterCancelPayload<T, V> = {\n  routerState: V;\n  storeState: T;\n  event: NavigationCancel;\n};\n\n/**\n * An action dispatched when the router cancel navigation.\n */\nexport type RouterCancelAction<T, V = RouterStateSnapshot> = {\n  type: typeof ROUTER_CANCEL;\n  payload: RouterCancelPayload<T, V>;\n};\n/**\n * An action dispatched when the router errors.\n */\nexport const ROUTER_ERROR = 'ROUTE_ERROR';\n\n/**\n * Payload of ROUTER_ERROR.\n */\nexport type RouterErrorPayload<T, V> = {\n  routerState: V;\n  storeState: T;\n  event: NavigationError;\n};\n\n/**\n * An action dispatched when the router errors.\n */\nexport type RouterErrorAction<T, V = RouterStateSnapshot> = {\n  type: typeof ROUTER_ERROR;\n  payload: RouterErrorPayload<T, V>;\n};\n\n/**\n * An union type of router actions.\n */\nexport type RouterAction<T, V = RouterStateSnapshot> =\n  | RouterNavigationAction<T>\n  | RouterCancelAction<T, V>\n  | RouterErrorAction<T, V>;\n\nexport type RouterReducerState<T = RouterStateSnapshot> = {\n  state: T;\n  navigationId: number;\n};\n/**\n * @template T\n * @param {?} state\n * @param {?} action\n * @return {?}\n */\nexport function routerReducer<T = RouterStateSnapshot>(\n  state: RouterReducerState<T>,\n  action: RouterAction<any>\n): RouterReducerState<T> {\n  switch (action.type) {\n    case ROUTER_NAVIGATION:\n    case ROUTER_ERROR:\n    case ROUTER_CANCEL:\n      return {\n        state: action.payload.routerState,\n        navigationId: action.payload.event.id,\n      };\n    default:\n      return state;\n  }\n}\n/**\n * Connects RouterModule with StoreModule.\n * \n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n * \n * ```\n * export type RouterNavigationPayload = {\n *   routerState: RouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n * \n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n * \n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n * \n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n * \n * Usage:\n * \n * ```typescript\n * \\@NgModule({ \n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nexport class StoreRouterConnectingModule {\nprivate routerState: RouterStateSnapshot;\nprivate storeState: any;\nprivate lastRoutesRecognized: RoutesRecognized;\nprivate dispatchTriggeredByRouter: boolean = false;\nprivate navigationTriggeredByDispatch: boolean = false;\n/**\n * @param {?} store\n * @param {?} router\n * @param {?} serializer\n */\nconstructor(\nprivate store: Store<any>,\nprivate router: Router,\nprivate serializer: RouterStateSerializer<RouterStateSnapshot>\n  ) {\n    this.setUpBeforePreactivationHook();\n    this.setUpStoreStateListener();\n    this.setUpStateRollbackEvents();\n  }\n/**\n * @return {?}\n */\nprivate setUpBeforePreactivationHook(): void {\n    ( /** @type {?} */((<any>this.router))).hooks.beforePreactivation = (\n      routerState: RouterStateSnapshot\n    ) => {\n      this.routerState = this.serializer.serialize(routerState);\n      if (this.shouldDispatchRouterNavigation())\n        this.dispatchRouterNavigation();\n      return of(true);\n    };\n  }\n/**\n * @return {?}\n */\nprivate setUpStoreStateListener(): void {\n    this.store.subscribe(s => {\n      this.storeState = s;\n      this.navigateIfNeeded();\n    });\n  }\n/**\n * @return {?}\n */\nprivate shouldDispatchRouterNavigation(): boolean {\n    if (!this.storeState['routerReducer']) return true;\n    return !this.navigationTriggeredByDispatch;\n  }\n/**\n * @return {?}\n */\nprivate navigateIfNeeded(): void {\n    if (\n      !this.storeState['routerReducer'] ||\n      !this.storeState['routerReducer'].state\n    ) {\n      return;\n    }\n    if (this.dispatchTriggeredByRouter) return;\n\n    if (this.router.url !== this.storeState['routerReducer'].state.url) {\n      this.navigationTriggeredByDispatch = true;\n      this.router.navigateByUrl(this.storeState['routerReducer'].state.url);\n    }\n  }\n/**\n * @return {?}\n */\nprivate setUpStateRollbackEvents(): void {\n    this.router.events.subscribe(e => {\n      if (e instanceof RoutesRecognized) {\n        this.lastRoutesRecognized = e;\n      } else if (e instanceof NavigationCancel) {\n        this.dispatchRouterCancel(e);\n      } else if (e instanceof NavigationError) {\n        this.dispatchRouterError(e);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate dispatchRouterNavigation(): void {\n    this.dispatchRouterAction(ROUTER_NAVIGATION, {\n      routerState: this.routerState,\n      event: new RoutesRecognized(\n        this.lastRoutesRecognized.id,\n        this.lastRoutesRecognized.url,\n        this.lastRoutesRecognized.urlAfterRedirects,\n        this.routerState\n      ),\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate dispatchRouterCancel(event: NavigationCancel): void {\n    this.dispatchRouterAction(ROUTER_CANCEL, {\n      routerState: this.routerState,\n      storeState: this.storeState,\n      event,\n    });\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate dispatchRouterError(event: NavigationError): void {\n    this.dispatchRouterAction(ROUTER_ERROR, {\n      routerState: this.routerState,\n      storeState: this.storeState,\n      event,\n    });\n  }\n/**\n * @param {?} type\n * @param {?} payload\n * @return {?}\n */\nprivate dispatchRouterAction(type: string, payload: any): void {\n    this.dispatchTriggeredByRouter = true;\n    try {\n      this.store.dispatch({ type, payload });\n    } finally {\n      this.dispatchTriggeredByRouter = false;\n      this.navigationTriggeredByDispatch = false;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    { provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer },\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Store, },\n{type: Router, },\n{type: RouterStateSerializer, },\n];\n}\n\nfunction StoreRouterConnectingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreRouterConnectingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreRouterConnectingModule.ctorParameters;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.routerState;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.storeState;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.lastRoutesRecognized;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.dispatchTriggeredByRouter;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.navigationTriggeredByDispatch;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.store;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.router;\n/** @type {?} */\nStoreRouterConnectingModule.prototype.serializer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { InjectionToken } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\n/**\n * @abstract\n */\nexport abstract class RouterStateSerializer<T> {\n/**\n * @abstract\n * @param {?} routerState\n * @return {?}\n */\nserialize(routerState: RouterStateSnapshot) {}\n}\nexport class DefaultRouterStateSerializer\n  implements RouterStateSerializer<RouterStateSnapshot> {\n/**\n * @param {?} routerState\n * @return {?}\n */\nserialize(routerState: RouterStateSnapshot) {\n    return routerState;\n  }\n}\n"],"names":[],"mappings":"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"}